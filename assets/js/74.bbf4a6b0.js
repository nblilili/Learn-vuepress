(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{354:function(t,a,s){t.exports=s.p+"assets/img/ios_login.0c26647a.png"},355:function(t,a,s){t.exports=s.p+"assets/img/ios_logout.b8925721.png"},810:function(t,a,s){"use strict";s.r(a);var n=s(29),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"登录"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#登录"}},[t._v("#")]),t._v(" 登录")]),t._v(" "),n("p",[t._v("本章节介绍如何初始化 JC SDK 并登录。")]),t._v(" "),n("h2",{attrs:{id:"初始化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[t._v("#")]),t._v(" 初始化")]),t._v(" "),n("p",[t._v("在主线程调用 "),n("RouterLink",{attrs:{to:"/portal/reference/V2.1/ios/Classes/JCClient.html#//api/name/create:callback:creatParam:"}},[t._v("JCClient\ncreate")]),t._v("\n接口创建\n"),n("RouterLink",{attrs:{to:"/portal/reference/V2.1/ios/Classes/JCClient.html"}},[t._v("JCClient")]),t._v("\n实例对象。传入获取到的 "),n("code",[t._v("appKey")]),t._v(" ，即可初始化\n"),n("RouterLink",{attrs:{to:"/portal/reference/V2.1/ios/Classes/JCClient.html"}},[t._v("JCClient")]),t._v("\n。")],1),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("p",[t._v("由于 JC SDK 功能以模块为基础，且模块实例将被频繁使用，建议使用单例对 JC SDK 中的类进行管理。")])]),t._v(" "),n("div",{staticClass:"language-objectivec extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objectivec"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bool"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("initialize "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    JCClient "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("client "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("JCClient create"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"创建应用获取的 AppKey"')]),t._v(" callback"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" creatParam"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("nil"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" client"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" JCClientStateIdle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("其中，callback 为 JCClientCallback 协议的代理对象，该协议用于将 client 的状态变化通知给上层。因此需要先指定\ncallback 的代理对象，然后在该代理对象中实现 JCClientCallback 的方法。")]),t._v(" "),n("p",[t._v("JCClientCallback 中的主要方法如下。")]),t._v(" "),n("div",{staticClass:"language-objectivec extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objectivec"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//登陆结果回调")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("onLogin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bool"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("result reason"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("JCClientReason"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("reason"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//登出回调")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("onLogout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("JCClientReason"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("reason"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//登陆状态变化通知")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("onClientStateChange"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("JCClientState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("state oldState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("JCClientState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("oldState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("初始化成功后，JCClientState 状态从 JCClientStateNotInit（未初始化） 变为\nJCClientStateIdle（未登录）。")]),t._v(" "),n("h2",{attrs:{id:"发起登录"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#发起登录"}},[t._v("#")]),t._v(" 发起登录")]),t._v(" "),n("p",[t._v("SDK 初始化之后，即可进行登录的集成。")]),t._v(" "),n("p",[t._v("登录接口调用流程如下所示：")]),t._v(" "),n("p",[n("img",{attrs:{src:s(354),alt:"../../../../_images/ios_login.png"}})]),t._v(" "),n("p",[t._v("先创建\n"),n("RouterLink",{attrs:{to:"/portal/reference/V2.1/ios/Classes/JCClientLoginParam.html"}},[t._v("JCClientLoginParam")]),t._v("\n实例以调整登录参数，后调用\n"),n("RouterLink",{attrs:{to:"/portal/reference/V2.1/ios/Classes/JCClient.html#//api/name/login:password:loginParam:"}},[t._v("login")]),t._v("\n发起登录。")],1),t._v(" "),n("div",{staticClass:"language-objectivec extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objectivec"}},[n("code",[t._v("JCClientLoginParam"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" loginParam "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("JCClientLoginParam alloc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" init"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 设置服务器环境")]),t._v("\nloginParam"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("serverAddress "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"服务器地址"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 发起登录")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("client login"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("userID password"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("password loginParam"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("loginParam"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("环境设置：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("国内环境 "),n("code",[t._v("http:cn.router.justalkcloud.com:8080")]),t._v(" （默认）")])]),t._v(" "),n("li",[n("p",[t._v("国际环境 "),n("code",[t._v("http:intl.router.justalkcloud.com:8080")])])])])]),t._v(" "),n("li",[n("p",[t._v("userID 不能为空，可由英文、数字和 "),n("code",[t._v("+")]),t._v(" 、 "),n("code",[t._v("-")]),t._v(" 、 "),n("code",[t._v("_")]),t._v(" 、 "),n("code",[t._v(".")]),t._v("\n组成（特殊字符不能作为第一个字符），大小写不敏感，长度不能超过\n64 个字符。")])]),t._v(" "),n("li",[n("p",[t._v("password 不能超过 128 个字符。")])]),t._v(" "),n("li",[n("p",[t._v("调用该接口返回 true 时只代表调用接口成功，并不代表登录成功。登录的结果会通过 onLogin 回调上报。")])])])]),t._v(" "),n("p",[t._v("调用发起登录接口成功后，会触发 JCClientCallback 回调中的方法将 client 的状态通知给上层。具体逻辑如下：")]),t._v(" "),n("p",[t._v("首先会触发 JCClientCallback 中的登录状态改变回调\n"),n("RouterLink",{attrs:{to:"/portal/reference/V2.1/ios/Protocols/JCClientCallback.html#//api/name/onClientStateChange:oldState:"}},[t._v("onClientStateChange")]),t._v("\n。您可以在上层实现\n"),n("RouterLink",{attrs:{to:"/portal/reference/V2.1/ios/Protocols/JCClientCallback.html#//api/name/onClientStateChange:oldState:"}},[t._v("onClientStateChange")]),t._v("\n方法并处理相关的逻辑。")],1),t._v(" "),n("div",{staticClass:"language-objectivec extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objectivec"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("onClientStateChange"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("JCClientState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("state oldState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("JCClientState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("oldState\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" JCClientStateIdle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 未登录")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" JCClientStateLogining"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 登录中")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" JCClientStateLogined"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 登录成功")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" JCClientStateLogouting"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 登出中")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("之后会触发 JCClientCallback 中的\n"),n("RouterLink",{attrs:{to:"/portal/reference/V2.1/ios/Protocols/JCClientCallback.html#//api/name/onLogin:reason:"}},[t._v("onLogin")]),t._v("\n回调。您可以在上层实现\n"),n("RouterLink",{attrs:{to:"/portal/reference/V2.1/ios/Protocols/JCClientCallback.html#//api/name/onLogin:reason:"}},[t._v("onLogin")]),t._v("\n方法并处理相关的逻辑。")],1),t._v(" "),n("div",{staticClass:"language-objectivec extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objectivec"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("onLogin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bool"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("result reason"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("JCClientReason"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("reason "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 登录成功")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reason "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" JCClientReasonAuth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 账号密码错误")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("登录成功后，JCClientState 状态从 JCClientStateIdle（未登录）变为\nJCClientStateLogined（登录成功）。SDK\n会自动保持与服务器的连接状态，直到用户主动调用登出接口，或者因为帐号在其他设备登录导致该设备登出。登录成功/失败原因\n参考\n"),n("RouterLink",{attrs:{to:"/portal/reference/V2.1/ios/Constants/JCClientReason.html"}},[t._v("JCClientReason")]),t._v("\n。")],1),t._v(" "),n("h2",{attrs:{id:"登出"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#登出"}},[t._v("#")]),t._v(" 登出")]),t._v(" "),n("p",[t._v("登出接口调用流程如下所示：")]),t._v(" "),n("p",[n("img",{attrs:{src:s(355),alt:"../../../../_images/ios_logout.png"}})]),t._v(" "),n("p",[t._v("调用\n"),n("RouterLink",{attrs:{to:"/portal/reference/V2.1/ios/Classes/JCClient.html#//api/name/logout"}},[t._v("logout")]),t._v("\n可以发起登出。")],1),t._v(" "),n("div",{staticClass:"language-objectivec extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objectivec"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("client logout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("登出同样会触发登录状态改变(onClientStateChange)回调，之后将通过 onLogout 回调上报登出结果。")]),t._v(" "),n("div",{staticClass:"language-objectivec extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objectivec"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("onLogout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("JCClientReason"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("reason "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reason "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" JCClientReasonServerLogout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 强制登出")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("更多登出原因参考："),n("RouterLink",{attrs:{to:"/portal/reference/V2.1/ios/Constants/JCClientReason.html"}},[t._v("JCClientReason")]),t._v("\n。")],1),t._v(" "),n("p",[t._v("登出成功后，JCClientState 状态从 JCClientStateLogined（登录成功） 变为\nJCClientStateIdle（未登录）。")])])}),[],!1,null,null,null);a.default=e.exports}}]);
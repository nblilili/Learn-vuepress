(window.webpackJsonp=window.webpackJsonp||[]).push([[475],{909:function(t,a,s){"use strict";s.r(a);var e=s(29),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"faq"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#faq"}},[t._v("#")]),t._v(" FAQ")]),t._v(" "),s("h2",{attrs:{id:"登录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#登录"}},[t._v("#")]),t._v(" 登录")]),t._v(" "),s("h4",{attrs:{id:"登录时用户名有要求吗？用户名规范是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#登录时用户名有要求吗？用户名规范是什么"}},[t._v("#")]),t._v(" 登录时用户名有要求吗？用户名规范是什么")]),t._v(" "),s("p",[t._v("用户名为英文数字和’+’ ‘-‘ ‘"),s("em",[t._v("’ ‘.’，’-‘ ‘")]),t._v("’ ‘.’不能作为第一个字符，长度不要超过64字符。")]),t._v(" "),s("h4",{attrs:{id:"免鉴权模式下客户如何使用自己的账号体系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#免鉴权模式下客户如何使用自己的账号体系"}},[t._v("#")]),t._v(" 免鉴权模式下客户如何使用自己的账号体系")]),t._v(" "),s("p",[t._v("免鉴权模式下，客户如果想用自己的账号体系，但是又不想将自己的账号作为服务器的账号标识，可以另起一个与自己的账号体系相对应的服务器端的账号标识作为自身的 ID，如自身账号体系为手机号：150…，服务器端账号体系可以为 ABC 之类的标识符。")]),t._v(" "),s("h4",{attrs:{id:"如何根据登录状态判断是否已经跟服务器连接成功"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何根据登录状态判断是否已经跟服务器连接成功"}},[t._v("#")]),t._v(" 如何根据登录状态判断是否已经跟服务器连接成功")]),t._v(" "),s("p",[t._v("可以通过 JCClient 类里的 onClientStateChange 回调检查登录状态的变化。")]),t._v(" "),s("h2",{attrs:{id:"账号查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#账号查询"}},[t._v("#")]),t._v(" 账号查询")]),t._v(" "),s("p",[t._v("如果遇到查询状态问题，可以先检查服务器地址，确保服务器地址和域保持一致，关于服务器地址的设置参考"),s("a",{attrs:{href:"/cn/document/V2.1/oto_video/quick-start/ios.php#w_id8"}},[t._v("登录环境设置")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"一对一通话"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一对一通话"}},[t._v("#")]),t._v(" 一对一通话")]),t._v(" "),s("h4",{attrs:{id:"一对一通话中，对端异常退出（程序被杀，断网）本端多久会挂断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一对一通话中，对端异常退出（程序被杀，断网）本端多久会挂断"}},[t._v("#")]),t._v(" 一对一通话中，对端异常退出（程序被杀，断网）本端多久会挂断")]),t._v(" "),s("p",[t._v("20 秒后。对端杀掉，本端 20 秒会挂断，上层会收到 notifyCallItemRemove，reason 是 term_by_self，callitem 里的 netstatus 状态为 -3。")]),t._v(" "),s("h4",{attrs:{id:"现在呼叫等待时间是多长"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#现在呼叫等待时间是多长"}},[t._v("#")]),t._v(" 现在呼叫等待时间是多长")]),t._v(" "),s("p",[t._v("信令模式下是 2 分钟，超时后服务器将主动挂断通话。")]),t._v(" "),s("h4",{attrs:{id:"a-呼叫-b，b-此时断网，a-挂断，b-网络恢复，此时-b-会弹出通话界面，并且马上就结束，是什么原因？是否可以避免"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#a-呼叫-b，b-此时断网，a-挂断，b-网络恢复，此时-b-会弹出通话界面，并且马上就结束，是什么原因？是否可以避免"}},[t._v("#")]),t._v(" A 呼叫 B，B 此时断网，A 挂断，B 网络恢复，此时 B 会弹出通话界面，并且马上就结束，是什么原因？是否可以避免")]),t._v(" "),s("p",[t._v("产生这个现象的原因是 B 网络恢复后，连续收到建立通话消息和结束通话消息。")]),t._v(" "),s("p",[t._v("A 呼叫 B 时，建立通话消息发送到服务器上，A 挂断时发送了结束通话消息，不是取消前一个消息（服务器没有取消前一个消息的功能）。这些消息会在服务器上缓存一段时间（60 秒）。\n如果 B 在缓冲的时间内网络恢复，则将收到缓存的消息。\n如果 B 在缓冲时间之外网络恢复，则缓存消息已被删除，B 不会收到这些消息，也将不会出现弹出通话界面并立刻结束的现象。")]),t._v(" "),s("p",[t._v("一种方式避免产生这个现象，是在收到建立通话消息的时候延迟一段时间（例如 0.5 秒）再显示通话界面，如果立刻收到结束通话的消息，就不显示通话界面。")]),t._v(" "),s("h4",{attrs:{id:"通话状态问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通话状态问题"}},[t._v("#")]),t._v(" 通话状态问题")]),t._v(" "),s("p",[t._v("调用 call 接口发起通话后，收到来电状态是 pending，调用 answer 接口后，通话状态变为 connecting，接通后变为 talking 状态。")]),t._v(" "),s("h4",{attrs:{id:"oncallitemremove-回调说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#oncallitemremove-回调说明"}},[t._v("#")]),t._v(" onCallItemRemove 回调说明")]),t._v(" "),s("p",[t._v("当收到 onCallItemRemove 回调时，callItem 不一定是当前的通话，可以通过 getCallItems 方法获得当前所有通话。")]),t._v(" "),s("h4",{attrs:{id:"关于-mtc-calldbsetfullscreen-bool-的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于-mtc-calldbsetfullscreen-bool-的使用"}},[t._v("#")]),t._v(" 关于 Mtc_CallDbSetFullScreen(bool) 的使用")]),t._v(" "),s("p",[t._v("调用该方法会影响 本端视频请求分辨率，默认设置为 true。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[s("strong",[t._v("前提条件")]),t._v("\n本端默认请求是 640"),s("em",[t._v("360 的分辨率\n本端屏幕分辨率为 360")]),t._v("360")]),t._v(" "),s("p",[t._v("如果设置为 true，则请求分辨率会被调整为 360"),s("em",[t._v("360；\n如果设置为 false，则请求分辨率还是以 640")]),t._v("360 进行请求。")])]),t._v(" "),s("h4",{attrs:{id:"关于-mtc-calldbsetadaptiveaspect-bool-使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于-mtc-calldbsetadaptiveaspect-bool-使用"}},[t._v("#")]),t._v(" 关于 Mtc_CallDbSetAdaptiveAspect(bool)使用")]),t._v(" "),s("p",[t._v("调用该方法会影响视频发送分辨率，默认 false。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[s("strong",[t._v("前提条件")]),t._v("\n摄像头采集为 1280"),s("em",[t._v("720 (16:9)\n协商后需要发送 320")]),t._v("240（4:3）的图像给对方")]),t._v(" "),s("p",[t._v("如果设置为 true，则发送视频按照摄像头采集的比例（16:9）进行发送（对端收到的视频数据不是按照协商的分辨率）；\n如果设置为 false，则发送视频按照协商后需要发送的视频比例（4:3）进行发送（裁剪摄像头采集的图像）。")])]),t._v(" "),s("h4",{attrs:{id:"自己采集视频数据进行传输（智能设备sdk没有该接口-只关心数据发送"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自己采集视频数据进行传输（智能设备sdk没有该接口-只关心数据发送"}},[t._v("#")]),t._v(" 自己采集视频数据进行传输（智能设备SDK没有该接口) 只关心数据发送")]),t._v(" "),s("p",[t._v("可以按照下面的方法进行设定：")]),t._v(" "),s("p",[t._v("startVideoFile - setVideoFileFrame - stopVideoFile")]),t._v(" "),s("p",[t._v("或者需要用到菊风云的渲染：")]),t._v(" "),s("p",[t._v("startVideo（通过 getVideoFileId 获得 videoSource 值） - setVideoFileFrame - stopVideo")]),t._v(" "),s("p",[t._v("支持的格式：")]),t._v(" "),s("p",[t._v("I420, IYUV, RGB24, ABGR, ARGB, ARGB444, RGB565, ARGB1555, YUY2, YV12, UYVY, MJPG, NV21, NV12, BGRA")]),t._v(" "),s("p",[t._v("其中，setVideoFileFrame 接口如下")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 逐帧采集视频画面\n *\n * 当为 H264 格式时\n * 1. 如果是关键帧需要将 0x67 0x68 0x41 的数据作为一帧传入\n * 2. 关键帧要以固定间隔传入，例如5秒，否则一开始可能有几秒对端无法显示视频\n *\n * @param data 画面二进制数据\n * @param format   视频像素格式\n * @param width    宽\n * @param height   高\n * @param angle    90 的倍数\n * @param mirror   0 不镜像，1进行左右镜像\n * @param keyFrame 是否为关键帧，针对 format 为 H264\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setVideoFileFrame")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@VideoPixelFormat")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" format"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" width"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" height"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" angle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" mirror"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" keyFrame"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"关于-h264-的说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于-h264-的说明"}},[t._v("#")]),t._v(" 关于 H264 的说明")]),t._v(" "),s("p",[t._v("由于媒体底层一开始默认 H264 为关闭状态，所以程序启动的第一次 setVideoFrame 必须在 connecting 之前有调用，否则会导致对端收不到画面。")]),t._v(" "),s("p",[t._v("解决方案1：提早调；\n解决方案2：SDK 初始化成功后调用以下代码。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("mediaDevice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("startVideoFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" buf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbuf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmediaDevice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setVideoFileFrame")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JCMediaDevice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("H264"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmediaDevice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stopVideoFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"会议支持人数说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#会议支持人数说明"}},[t._v("#")]),t._v(" 会议支持人数说明")]),t._v(" "),s("p",[t._v("会议总人数上限为 16 人。\n由于 CDN 直播，WebRTC，录制等都算会议成员，所以计算人数时需要注意。\n加入会议时，同一区域的同一通道 ID，即时 AppKey 不同，也可以互通。其中，区域是国家（地理位置）的概念，域是指服务器的域名，如下图所示")]),t._v(" "),s("p",[s("img",{attrs:{src:"/style/images/document/faq/questions1.png",alt:"img"}})]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("如果参会成员不在同一区域，即使通道 ID 相同也不能互通。程序默认区域值为中国。比如，同在中国的用户 A 和 B，在通道 ID 相同的情况下均可以加入会议。如果另一个成员 C 在国外，那么即时他拥有与 A、B 相同的通道 ID，也不能加入会议。")])])])}),[],!1,null,null,null);a.default=n.exports}}]);
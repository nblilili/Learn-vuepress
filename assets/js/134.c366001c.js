(window.webpackJsonp=window.webpackJsonp||[]).push([[134],{378:function(t,a,s){t.exports=s.p+"assets/img/1-1workflowios.cd8210dd.png"},611:function(t,a,s){"use strict";s.r(a);var n=s(29),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"实现一对一通话"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实现一对一通话"}},[t._v("#")]),t._v(" 实现一对一通话")]),t._v(" "),n("p",[t._v("本章将介绍如何实现一对一语音通话，一对一通话的 API 调用时序见下图：")]),t._v(" "),n("p",[n("img",{attrs:{src:s(378),alt:"../../../../_images/1-1workflowios.png"}})]),t._v(" "),n("h2",{attrs:{id:"初始化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[t._v("#")]),t._v(" 初始化")]),t._v(" "),n("p",[t._v("调用 "),n("RouterLink",{attrs:{to:"/portal/reference/V2.1/ios/Classes/JCMediaDevice.html#//api/name/create:callback:"}},[t._v("JCMediaDevice\ncreate")]),t._v("\n和 "),n("RouterLink",{attrs:{to:"/portal/reference/V2.1/ios/Classes/JCCall.html#//api/name/create:mediaDevice:callback:"}},[t._v("JCCall\ncreate")]),t._v("\n以初始化实现一对一通话需要的模块。")],1),t._v(" "),n("div",{staticClass:"language-objectivec extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objectivec"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bool"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("initialize "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1. 媒体类")]),t._v("\n    JCMediaDevice "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("mediaDevice "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("JCMediaDevice create"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("client callback"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2. 通话类")]),t._v("\n    JCCall "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("call "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("JCCall create"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("client mediaDevice"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("mediaDevice callback"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" client"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" JCClientStateLogined"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("其中：")]),t._v(" "),n("ul",[n("li",[t._v("JCMediaDevice create 方法中的 callback 为\n"),n("RouterLink",{attrs:{to:"/portal/reference/V2.1/ios/Protocols/JCMediaDeviceCallback.html"}},[t._v("JCMediaDeviceCallback")]),t._v("\n协议的代理对象，该协议用于将媒体设备相关的事件通知给上层。因此需要先指定 callback 的代理对象，然后在该代理对象中实现\nJCMediaDeviceCallback 的方法。")],1)]),t._v(" "),n("p",[t._v("JCMediaDeviceCallback 中的主要方法如下。")]),t._v(" "),n("div",{staticClass:"language-objectivec extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objectivec"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//摄像头变化")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("onCameraUpdate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//音频输出变化")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("onAudioOutputTypeChange"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSString"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("audioOutputType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//声音中断恢复")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("onAudioInerruptAndResume"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BOOL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("interrupt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("ul",[n("li",[t._v("JCCall create 方法中的 callback 为\n"),n("RouterLink",{attrs:{to:"/portal/reference/V2.1/ios/Protocols/JCCallCallback.html"}},[t._v("JCCallCallback")]),t._v("\n协议的代理对象，该协议用于将通话相关的事件通知给上层。因此需要先指定 callback 的代理对象，然后在该代理对象中实现\nJCCallCallback 的方法。")],1)]),t._v(" "),n("p",[t._v("JCCallCallback 中的主要方法如下。")]),t._v(" "),n("div",{staticClass:"language-objectivec extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objectivec"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//新增通话回调")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("onCallItemAdd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("JCCallItem"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" __nonnull"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("item"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//移除通话")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("onCallItemRemove"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("JCCallItem"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" __nonnull"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("item reason"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("JCCallReason"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("reason description"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSString "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" __nullable"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("description"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通话状态更新回调（当上层收到此回调时，可以根据 JCCallItem 对象获得该通话的所有信息及状态，从而更新该通话相关UI）")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("onCallItemUpdate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("JCCallItem"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" __nonnull"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("item changeParam"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("JCCallChangeParam "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" __nullable"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("changeParam"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h2",{attrs:{id:"拨打通话"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#拨打通话"}},[t._v("#")]),t._v(" 拨打通话")]),t._v(" "),n("p",[t._v("调用\n"),n("RouterLink",{attrs:{to:"/portal/reference/V2.1/ios/Classes/JCCall.html#//api/name/call:video:extraParam:"}},[t._v("call")]),t._v("\n发起语音通话，需要填写的参数有：")],1),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("userID")]),t._v(" 填写对方的用户ID。")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("video")]),t._v(" 选择是否为视频通话， true 表示拨打视频通话， false 表示拨打语音通话。")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("extraParam")]),t._v(" 为自定义透传字符串， 可通过 JCCallItem 对象中的 extraParam 属性获得。")])])]),t._v(" "),n("div",{staticClass:"language-objectivec extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objectivec"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发起语音呼叫")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("call call"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"userID"')]),t._v(" video"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("false extraParam"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"自定义透传字符串"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("拨打通话后，主叫和被叫均会收到新增通话的回调\n"),n("RouterLink",{attrs:{to:"/portal/reference/V2.1/ios/Protocols/JCCallCallback.html#//api/name/onCallItemAdd:"}},[t._v("onCallItemAdd")]),t._v("\n，此时通话状态变为 JCCallStatePending 。您可以在上层实现\n"),n("RouterLink",{attrs:{to:"/portal/reference/V2.1/ios/Protocols/JCCallCallback.html#//api/name/onCallItemAdd:"}},[t._v("onCallItemAdd")]),t._v("\n方法并处理相关的逻辑。")],1),t._v(" "),n("p",[t._v("示例代码:")]),t._v(" "),n("div",{staticClass:"language-objectivec extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objectivec"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 收到新增通话回调")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("onCallItemAdd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("JCCallItem"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" __nonnull"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("item "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 业务逻辑")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("direction "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" JCCallDirectionIn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果是呼入")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果是呼出")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("p",[t._v("如果主叫想取消通话，可以直接转到挂断通话部分。调用挂断接口后，通话状态变为 JCCallStateCancel。")])]),t._v(" "),n("h2",{attrs:{id:"应答通话"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#应答通话"}},[t._v("#")]),t._v(" 应答通话")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("主叫发起呼叫成功后，被叫会收到\n"),n("RouterLink",{attrs:{to:"/portal/reference/V2.1/ios/Protocols/JCCallCallback.html#//api/name/onCallItemAdd:"}},[t._v("onCallItemAdd")]),t._v("\n回调，此时可以通过回调中的\n"),n("RouterLink",{attrs:{to:"/portal/reference/V2.1/ios/Classes/JCCallItem.html"}},[t._v("JCCallItem")]),t._v("\n对象的 video 以及 direction 属性判断是视频呼入还是语音呼入，从而做出相应的处理。")],1),t._v(" "),n("div",{staticClass:"language-objectivec extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objectivec"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("onCallItemAdd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("JCCallItem"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" __nonnull"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("item "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 如果是语音呼入且在振铃中")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" item"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("direction "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" JCCallDirectionIn "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("item"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("video"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 做出相应的处理，如在界面上显示“振铃中”")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[n("p",[t._v("调用\n"),n("RouterLink",{attrs:{to:"/portal/reference/V2.1/ios/Classes/JCCall.html#//api/name/answer:video:"}},[t._v("answer")]),t._v("\n接听通话，"),n("strong",[t._v("语音通话只能进行语音应答")]),t._v(" 。")],1),t._v(" "),n("div",{staticClass:"language-objectivec extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objectivec"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 应答通话")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("call answer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("item video"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("false"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),n("p",[t._v("通话应答后，通话状态变为 JCCallStateConnecting。")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("p",[t._v("如果被叫要在此时拒绝通话，可以直接转到挂断通话部分。调用挂断接口后，通话状态变为 JCCallStateCanceled。")])]),t._v(" "),n("h2",{attrs:{id:"挂断通话"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#挂断通话"}},[t._v("#")]),t._v(" 挂断通话")]),t._v(" "),n("p",[t._v("主叫或者被叫均可以挂断通话。")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("首先调用\n"),n("RouterLink",{attrs:{to:"/portal/reference/V2.1/ios/Classes/JCCall.html#//api/name/getActiveCallItem"}},[t._v("getActiveCallItem")]),t._v("\n获取当前活跃的通话对象；")],1)]),t._v(" "),n("li",[n("p",[t._v("当前活跃通话对象获取后，调用\n"),n("RouterLink",{attrs:{to:"/portal/reference/V2.1/ios/Classes/JCCall.html#//api/name/term:reason:description:"}},[t._v("term")]),t._v("\n挂断当前活跃通话:")],1),t._v(" "),n("div",{staticClass:"language-objectivec extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objectivec"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 获取当前活跃通话")]),t._v("\nJCCallItem "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("item "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("call getActiveCallItem"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 挂断当前活跃通话")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("call term"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("item reason"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("JCCallReasonNone description"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"主叫挂断"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),n("p",[t._v("通话挂断后，会触发 JCCallCallback 中的 onCallItemRemove（通话移除回调），通话状态变为\nJCCallStateOk。")])])}),[],!1,null,null,null);a.default=e.exports}}]);
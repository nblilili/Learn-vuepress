(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{323:function(e,a,t){e.exports=t.p+"assets/img/1-1workflowios.fafe6836.png"},476:function(e,a,t){"use strict";t.r(a);var l=t(43),n=Object(l.a)({},(function(){var e=this,a=e.$createElement,l=e._self._c||a;return l("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[l("h1",{attrs:{id:"实现一对一通话"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#实现一对一通话"}},[e._v("#")]),e._v(" 实现一对一通话")]),e._v(" "),l("p",[e._v("本章将介绍如何实现一对一视频通话，一对一通话的 API 调用时序见下图：")]),e._v(" "),l("p",[l("img",{attrs:{src:t(323),alt:"../../../../_images/1-1workflowios.png"}})]),e._v(" "),l("h2",{attrs:{id:"初始化"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[e._v("#")]),e._v(" 初始化")]),e._v(" "),l("p",[e._v("首先继承\n"),l("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/windows/C++/html/class_j_c_media_device_callback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("JCMediaDeviceCallback"),l("OutboundLink")],1),e._v("\n对象和\n"),l("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/windows/C++/html/class_j_c_call_callback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("JCCallCallback"),l("OutboundLink")],1),e._v("\n对象，并实现这两个对象中的纯虚函数。")]),e._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",[l("code",[e._v("class JCManager : public JCMediaDeviceCallback, public JCCallCallback\n{\npublic:\n  //新增通话回调\n  virtual void onCallItemAdd(JCCallItem* item);\n  //移除通话回调\n  virtual void onCallItemRemove(JCCallItem* item, JCCallReason reason, const char* description);\n  //通话状态更新回调\n  virtual void onCallItemUpdate(JCCallItem* item, JCCallItemChangeParam changeParam);\n  //通话中收到消息回调\n  virtual void onMessageReceive(const char* type, const char* content, JCCallItem* item);\n  //上报服务器拉取的未接来电\n  virtual void onMissedCallItem(JCCallItem* item);\n  //摄像头变化回调\n  virtual void onCameraUpdate();\n\npublic:\n    //JCMediaDevice 对象\n    JCMediaDevice* mediaDevice;\n    //JCCall 对象\n    JCCall* call;\n};\n")])])]),l("p",[e._v("Note")]),e._v(" "),l("p",[e._v("回调中的对象只能在该回调中使用，不能保存，上层可通过对应的方法获取通话对象。")]),e._v(" "),l("p",[e._v("然后调用\n"),l("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/windows/C++/html/_j_c_media_device_8h.html#a96a10766264f3c12af531b70cb9c9749",target:"_blank",rel:"noopener noreferrer"}},[e._v("createJCMediaDevice"),l("OutboundLink")],1),e._v("\n和\n"),l("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/windows/C++/html/_j_c_call_8h.html#a29320972a659ce8eaf4994576103a62c",target:"_blank",rel:"noopener noreferrer"}},[e._v("createJCCall"),l("OutboundLink")],1),e._v("\n以初始化一对一通话需要的模块")]),e._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",[l("code",[e._v("bool JCManager::initialize()\n{\n  //1. 媒体类\n  mediaDevice = createJCMediaDevice(client, this);\n  //2. 通话类\n  call = createJCCall(client, mediaDevice, this);\n  return true;\n}\n")])])]),l("p",[e._v("其中：")]),e._v(" "),l("ul",[l("li",[l("p",[e._v("JCMediaDevice create 方法中的 this 为\n"),l("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/windows/C++/html/class_j_c_media_device_callback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("JCMediaDeviceCallback"),l("OutboundLink")],1),e._v("\n的派生类，该类于将媒体设备相关的事件通知给上层。因此需要先创建 JCMediaDeviceCallback\n的派生类，然后在该派生类中实现 JCMediaDeviceCallback\n的纯虚函数。")])]),e._v(" "),l("li",[l("p",[e._v("JCCall create 方法中的 this 为\n"),l("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/windows/C++/html/class_j_c_call_callback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("JCCallCallback"),l("OutboundLink")],1),e._v("\n的派生类，该类用于将通话相关的事件通知给上层。因此需要先创建 JCCallCallback 的派生类，然后在该派生类中实现\nJCCallCallback 的纯虚函数。")])])]),e._v(" "),l("h2",{attrs:{id:"拨打通话"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#拨打通话"}},[e._v("#")]),e._v(" 拨打通话")]),e._v(" "),l("p",[e._v("调用\n"),l("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/windows/C++/html/class_j_c_call.html#a7b2d614431cb23e82ea18b77deb50549",target:"_blank",rel:"noopener noreferrer"}},[e._v("call"),l("OutboundLink")],1),e._v("\n发起视频通话，需要填写的参数有：")]),e._v(" "),l("ul",[l("li",[l("p",[l("code",[e._v("userID")]),e._v(" 填写对方的用户ID。")])]),e._v(" "),l("li",[l("p",[l("code",[e._v("video")]),e._v(" 选择是否为视频通话， true 表示拨打视频通话， false 表示拨打语音通话。")])]),e._v(" "),l("li",[l("p",[l("code",[e._v("extraParam")]),e._v(" 为自定义透传字符串， 可通过 JCCallItem 对象中的 extraParam 属性获得。")]),e._v(" "),l("p",[e._v('// 发起视频呼叫\nvoid JCSampleDlg::OnBnClickedButtonVideocall()\n{\nJCManager::shared()->call->call("userID", true, "自定义透传字符串");\n}')])])]),e._v(" "),l("p",[e._v("拨打通话后，主叫和被叫均会收到新增通话的回调\n"),l("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/windows/C++/html/class_j_c_call_callback.html#a2188f777767ca071c145d4a50687ce63",target:"_blank",rel:"noopener noreferrer"}},[e._v("onCallItemAdd"),l("OutboundLink")],1),e._v("\n，此时通话状态变为 JCCallStatePending 。你可以在上层实现\n"),l("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/windows/C++/html/class_j_c_call_callback.html#a2188f777767ca071c145d4a50687ce63",target:"_blank",rel:"noopener noreferrer"}},[e._v("onCallItemAdd"),l("OutboundLink")],1),e._v("\n方法并处理相关的逻辑。")]),e._v(" "),l("p",[e._v("示例代码:")]),e._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",[l("code",[e._v("// 收到新增通话回调\nvoid JCManager::onCallItemAdd(JCCallItem* item) {\n    // 业务逻辑\n    if (item->direction == JCCallDirectionIn) {\n        // 如果是呼入\n        ...\n    } else {\n        // 如果是呼出\n        ...\n    }\n}\n")])])]),l("p",[e._v("Note")]),e._v(" "),l("p",[e._v("回调中的对象只能在该回调中使用，不能保存，上层可通过对应的方法获取通话对象。\n如果主叫想取消通话，可以直接转到挂断通话部分。调用挂断接口后，通话状态变为\nJCCallStateCancel。")]),e._v(" "),l("h2",{attrs:{id:"创建本地视频画面"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#创建本地视频画面"}},[e._v("#")]),e._v(" 创建本地视频画面")]),e._v(" "),l("p",[e._v("发起通话后，调用\n"),l("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/windows/C++/html/class_j_c_call_item.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("JCCallItem"),l("OutboundLink")],1),e._v("\n类中的\n"),l("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/windows/C++/html/class_j_c_call_item.html#a16fadea791640b31f32c6075f9233578",target:"_blank",rel:"noopener noreferrer"}},[e._v("startSelfVideo"),l("OutboundLink")],1),e._v("\n方法创建本地视频画面，该方法会返回一个\n"),l("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/windows/C++/html/class_j_c_media_device_video_canvas.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("JCMediaDeviceVideoCanvas"),l("OutboundLink")],1),e._v("\n对象。该对象用于将视频渲染到画布上，并管理渲染的方式。（调用此方法会打开摄像头）")]),e._v(" "),l("p",[e._v("示例代码:")]),e._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",[l("code",[e._v("void JCManager::onCallItemAdd(JCCallItem* item) {\n    JCMediaDeviceVideoCanvas* mCallLocalCanvas;\n    if (mCallLocalCanvas == NULL && item->getUploadVideoStreamSelf())\n                {\n        // 创建本地视频画面\n        mCallLocalCanvas = item->startSelfVideo((void*)mWndCallLocalVideo.m_hWnd, (JCMediaDeviceRenderMode)JCMediaDeviceRenderModeFullContent);\n    }\n}\n")])])]),l("h2",{attrs:{id:"应答通话"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#应答通话"}},[e._v("#")]),e._v(" 应答通话")]),e._v(" "),l("ol",[l("li",[e._v("主叫发起呼叫成功后，被叫会收到\n"),l("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/windows/C++/html/class_j_c_call_callback.html#a2188f777767ca071c145d4a50687ce63",target:"_blank",rel:"noopener noreferrer"}},[e._v("onCallItemAdd"),l("OutboundLink")],1),e._v("\n回调，此时可以通过回调中的\n"),l("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/windows/C++/html/class_j_c_call_item.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("JCCallItem"),l("OutboundLink")],1),e._v("\n对象中的 getVideo() 方法以及 getDirection() 方法判断是视频呼入还是语音呼入，从而做出相应的处理:")])]),e._v(" "),l("p",[e._v("示例代码:")]),e._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",[l("code",[e._v("void JCManager::onCallItemAdd(JCCallItem* item) {\n    // 1. 如果是视频呼入且在振铃中\n    if (item->getDirection() == JCCallDirectionIn && item->getState() == JCCallStatePending) {\n        // 2. 做出相应的处理，如在界面上显示“振铃中”\n         ...\n    }\n}\n")])])]),l("p",[e._v("2. 调用\n"),l("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/windows/C++/html/class_j_c_call.html#a8e44cef3051dba33a600042c7a5bf987",target:"_blank",rel:"noopener noreferrer"}},[e._v("answer"),l("OutboundLink")],1),e._v("\n接听通话，"),l("strong",[e._v("视频通话既可语音应答也可视频应答")])]),e._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",[l("code",[e._v("// 获取活跃通话\nJCCallItem* item = JCManager::shared()->call->getActiveCallItem();\n// 应答通话\nJCManager::shared()->call->answer(item, item->getVideo());\n")])])]),l("p",[e._v("通话应答后，通话状态变为 JCCallStateConnecting。")]),e._v(" "),l("p",[e._v("Note")]),e._v(" "),l("p",[e._v("如果要在此时拒绝通话，可以直接转到挂断通话部分。调用挂断接口后，通话状态变为 JCCallStateCanceled。")]),e._v(" "),l("h2",{attrs:{id:"创建远端视频画面"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#创建远端视频画面"}},[e._v("#")]),e._v(" 创建远端视频画面")]),e._v(" "),l("p",[e._v("被叫接听通话后，双方将建立连接，此时，主叫和被叫都将会收到通话更新的回调（onCallItemUpdate），通话状态变为\nJCCallStateTalking。")]),e._v(" "),l("p",[e._v("调用\n"),l("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/windows/C++/html/class_j_c_call_item.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("JCCallItem"),l("OutboundLink")],1),e._v("\n类中的\n"),l("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/windows/C++/html/class_j_c_call_item.html#ac3ccc64bbb7ebebaa3ca3219b21d4ce9",target:"_blank",rel:"noopener noreferrer"}},[e._v("startOtherVideo"),l("OutboundLink")],1),e._v("\n方法创建远端视频画面，该方法会返回一个\n"),l("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/windows/C++/html/class_j_c_media_device_video_canvas.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("JCMediaDeviceVideoCanvas"),l("OutboundLink")],1),e._v("\n对象，该对象用于将视频渲染到画布上，并管理渲染的方式。")]),e._v(" "),l("p",[e._v("示例代码:")]),e._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",[l("code",[e._v("void JCManager::onCallItemUpdate(JCCallItem* item, JCCallItemChangeParam changeParam) {\n    JCMediaDeviceVideoCanvas *mCallRemoteCanvas;\n    // 如果对端在上传视频流（uploadVideoStreamOther）\n    if (mCallRemoteCanvas == NULL && item->getUploadVideoStreamOther())\n    {\n      // 创建远端视频画面\n      mCallRemoteCanvas = item->startOtherVideo(mWndCallRemoteVideo.m_hWnd, (JCMediaDeviceRenderMode)JCMediaDeviceRenderModeFullContent);\n    }\n}\n")])])]),l("h2",{attrs:{id:"挂断通话"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#挂断通话"}},[e._v("#")]),e._v(" 挂断通话")]),e._v(" "),l("p",[e._v("主叫或者被叫均可以挂断通话。")]),e._v(" "),l("ol",[l("li",[l("p",[e._v("首先调用\n"),l("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/windows/C++/html/class_j_c_call.html#a4b5e8afc43bd12f877e37a97fec2ff7a",target:"_blank",rel:"noopener noreferrer"}},[e._v("getActiveCallItem"),l("OutboundLink")],1),e._v("\n获取当前活跃的通话对象；")])]),e._v(" "),l("li",[l("p",[e._v("当前活跃通话对象获取后，调用\n"),l("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/windows/C++/html/class_j_c_call.html#a168fd884512bfd5451ffa5fac83c598b",target:"_blank",rel:"noopener noreferrer"}},[e._v("term"),l("OutboundLink")],1),e._v("\n挂断当前活跃通话:")]),e._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",[l("code",[e._v('void JCSampleDlg::OnBnClickedButtonTermcall()\n{\n  // 1. 获取当前活跃通话\n  JCCallItem* item = JCManager::shared()->call->getActiveCallItem();\n  if (item != NULL)\n  {\n    // 2. 挂断当前活跃通话\n    JCManager::shared()->call->term(item, JCCallReasonNone, "term");\n  }\n}\n')])])])])]),e._v(" "),l("h2",{attrs:{id:"销毁本地和远端视频画面"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#销毁本地和远端视频画面"}},[e._v("#")]),e._v(" 销毁本地和远端视频画面")]),e._v(" "),l("p",[e._v("通话挂断后，会触发\n"),l("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/windows/C++/html/class_j_c_call_callback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("JCCallCallback"),l("OutboundLink")],1),e._v("\n中的 onCallItemRemove（通话移除回调），通话状态变为 JCCallStateOk，此时您需要调用\n"),l("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/windows/C++/html/class_j_c_call_item.html#a8d6f702c5e477f60df2e671e9392ce76",target:"_blank",rel:"noopener noreferrer"}},[e._v("stopSelfVideo"),l("OutboundLink")],1),e._v("\n和\n"),l("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/windows/C++/html/class_j_c_call_item.html#a1c58b54ed0f4aac1bef8383ede0f7651",target:"_blank",rel:"noopener noreferrer"}},[e._v("stopOtherVideo"),l("OutboundLink")],1),e._v("\n方法销毁本地和远端视频画面。")]),e._v(" "),l("p",[e._v("示例代码:")]),e._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",[l("code",[e._v("void JCManager::onCallItemRemove(JCCallItem* item, JCCallReason reason, const char* description) { //移除通话回调\n  // 本端视频销毁\n  if (mCallLocalCanvas != NULL && !item->getUploadVideoStreamSelf())\n  {\n    item->stopSelfVideo();\n    mCallLocalCanvas = NULL;\n    mWndCallLocalVideo.Invalidate();\n  }\n  // 远端视频销毁\n  if (mCallRemoteCanvas != NULL && !item->getUploadVideoStreamOther())\n  {\n    item->stopOtherVideo();\n    mCallRemoteCanvas = NULL;\n    mWndCallRemoteVideo.Invalidate();\n  }\n}\n")])])]),l("p",[e._v("至此，你就完成了基础的一对一视频通话功能。")])])}),[],!1,null,null,null);a.default=n.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[283],{681:function(a,n,e){"use strict";e.r(n);var t=e(43),r=Object(t.a)({},(function(){var a=this,n=a.$createElement,e=a._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"频道管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#频道管理"}},[a._v("#")]),a._v(" 频道管理")]),a._v(" "),e("h2",{attrs:{id:"频道信息查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#频道信息查询"}},[a._v("#")]),a._v(" 频道信息查询")]),a._v(" "),e("p",[a._v("如需查询频道相关信息，例如频道名称、是否存在、成员名、成员数，可以调用 query 接口进行查询操作")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v("/**\n * 查询频道相关信息，例如是否存在，人数等\n *\n * @param channelId 频道标识\n * @return          返回操作id，与 onQuery 回调中的 operationId 对应\n */\npublic abstract int query(String channelId);\n")])])]),e("p",[a._v("示例代码:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v('mediaChannel.query("channelId");\n')])])]),e("p",[a._v("查询操作发起后，UI 通过以下方法监听回调查询的结果：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v("/**\n * 查询频道信息结果回调\n *\n * @param operationId 操作id，由 query 接口返回\n * @param result      查询结果，true 表示查询成功，false 表示查询失败\n * @param reason      查询失败原因，当 result 为 false 时该值有效\n * @param queryInfo   查询到的频道信息\n */\npublic void onQuery(int operationId, boolean result, @JCMediaChannel.MediaChannelReason int reason, JCMediaChannelQueryInfo queryInfo);\n")])])]),e("p",[a._v("示例代码:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v("public void onQuery(int operationId, boolean result, @JCMediaChannel.MediaChannelReason int reason, JCMediaChannelQueryInfo queryInfo) {\n   // 查询成功\n   if (result) {\n        // 频道标识\n        String channelId = queryInfo.getChannelId();\n        // 频道\n        int number = queryInfo.getNumber();\n        // 频道成员数\n        int clientCount = queryInfo.getClientCount();\n        // 频道成员列表\n        List<String>  members = queryInfo.getMembers();\n   } else {\n        // 查询失败\n   }\n}\n")])])]),e("hr"),a._v(" "),e("h2",{attrs:{id:"频道成员管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#频道成员管理"}},[a._v("#")]),a._v(" 频道成员管理")]),a._v(" "),e("h3",{attrs:{id:"获取成员对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#获取成员对象"}},[a._v("#")]),a._v(" 获取成员对象")]),a._v(" "),e("p",[a._v("通过 userId 获取频道成员对象")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v('/// <summary>\n/// 获取频道内成员\n/// </summary>\n/// <param name="userId">用户唯一标识</param>\n/// <returns>成员对象</returns>\npublic JCMediaChannelParticipant getParticipant(string userId)\n')])])]),e("hr"),a._v(" "),e("h3",{attrs:{id:"踢出成员"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#踢出成员"}},[a._v("#")]),a._v(" 踢出成员")]),a._v(" "),e("p",[a._v("调用下面的方法将成员踢出会议")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v('/// <summary>\n/// 踢人\n/// </summary>\n/// <param name="participant">成员</param>\n/// <returns>调用结果</returns>\npublic bool kick(JCMediaChannelParticipant participant)\n')])])]),e("p",[a._v("示例代码:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v('JCMediaChannelParticipant participant = mediaChannel.getParticipant("userId");\nif (participant != nil) {\n    mediaChannel.kick(participant);\n}\n')])])]),e("hr"),a._v(" "),e("h3",{attrs:{id:"给其他成员发消息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#给其他成员发消息"}},[a._v("#")]),a._v(" 给其他成员发消息")]),a._v(" "),e("p",[a._v("如果想在频道中给其他成员发送消息，可以调用下面的接口")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v('/// <summary>\n/// 频道中发送消息，当 toUserId 不为 null 时，content 不能大于 4k\n/// </summary>\n/// <param name="type">消息类型</param>\n/// <param name="content">消息内容</param>\n/// <param name="toUserId">接收方成员的userid，值为null发送给所有人</param>\n/// <returns>是否发送成功</returns>\npublic bool sendMessage(string type, string content, string toUserId)\n')])])]),e("p",[a._v("其中，消息类型（type）为自定义类型。")]),a._v(" "),e("p",[a._v("示例代码:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v('public void onJoin(bool result, JCMediaChannelReason reason, string channelId) {\n    // 发送给所有成员\n    mediaChannel.sendMessage("text", "content", null);\n    // 发送给某个成员\n    mediaChannel.sendMessage("text", "content", "userId");\n}\n')])])]),e("p",[a._v("当频道中的其他成员收到消息时，会收到 onMessageReceive 回调")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v('/// <summary>\n/// 接收频道消息的回调\n/// </summary>\n/// <param name="type">消息类型</param>\n/// <param name="content">消息内容</param>\n/// <param name="fromUserId">消息发送成员userId</param>\nvoid onMessageReceive(string type, string content, string fromUserId);\n')])])]),e("hr")])}),[],!1,null,null,null);n.default=r.exports}}]);
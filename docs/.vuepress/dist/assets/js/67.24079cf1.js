(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{323:function(e,a,l){e.exports=l.p+"assets/img/1-1workflowios.fafe6836.png"},500:function(e,a,l){"use strict";l.r(a);var t=l(43),n=Object(t.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"实现一对一通话"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现一对一通话"}},[e._v("#")]),e._v(" 实现一对一通话")]),e._v(" "),t("p",[e._v("本章将介绍如何实现一对一语音通话，一对一通话的 API 调用时序见下图：")]),e._v(" "),t("p",[t("img",{attrs:{src:l(323),alt:"../../../../_images/1-1workflowios.png"}})]),e._v(" "),t("h2",{attrs:{id:"初始化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[e._v("#")]),e._v(" 初始化")]),e._v(" "),t("p",[e._v("调用 "),t("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/ios/Classes/JCMediaDevice.html#//api/name/create:callback:",target:"_blank",rel:"noopener noreferrer"}},[e._v("JCMediaDevice\ncreate"),t("OutboundLink")],1),e._v("\n和 "),t("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/ios/Classes/JCCall.html#//api/name/create:mediaDevice:callback:",target:"_blank",rel:"noopener noreferrer"}},[e._v("JCCall\ncreate"),t("OutboundLink")],1),e._v("\n以初始化实现一对一通话需要的模块")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("//初始化\n-(bool)initialize {\n   //1. 媒体类\n   JCMediaDevice *mediaDevice = [JCMediaDevice create:client callback:self];\n   //2. 通话类\n   JCCall *call = [JCCall create:client mediaDevice:mediaDevice callback:self];\n   return client.state == JCClientStateLogined;\n}\n")])])]),t("p",[e._v("其中：")]),e._v(" "),t("ul",[t("li",[e._v("JCMediaDevice create 方法中的 callback 为\n"),t("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/ios/Protocols/JCMediaDeviceCallback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("JCMediaDeviceCallback"),t("OutboundLink")],1),e._v("\n协议的代理对象，该协议用于将媒体设备相关的事件通知给上层。因此需要先指定 callback 的代理对象，然后在该代理对象中实现\nJCMediaDeviceCallback 的方法。")])]),e._v(" "),t("p",[e._v("JCMediaDeviceCallback 中的主要方法如下")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("//摄像头变化\n-(void)onCameraUpdate;\n\n//音频输出变化\n-(void)onAudioOutputTypeChange:(NSString*)audioOutputType;\n\n//声音中断恢复\n-(void)onAudioInerruptAndResume:(BOOL)interrupt;\n")])])]),t("ul",[t("li",[e._v("JCCall create 方法中的 callback 为\n"),t("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/ios/Protocols/JCCallCallback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("JCCallCallback"),t("OutboundLink")],1),e._v("\n协议的代理对象，该协议用于将通话相关的事件通知给上层。因此需要先指定 callback 的代理对象，然后在该代理对象中实现\nJCCallCallback 的方法。")])]),e._v(" "),t("p",[e._v("JCCallCallback 中的主要方法如下")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("//新增通话回调\n-(void)onCallItemAdd:(JCCallItem* __nonnull)item;\n\n//移除通话\n-(void)onCallItemRemove:(JCCallItem* __nonnull)item reason:(JCCallReason)reason description:(NSString * __nullable)description;\n\n//通话状态更新回调（当上层收到此回调时，可以根据 JCCallItem 对象获得该通话的所有信息及状态，从而更新该通话相关UI）\n-(void)onCallItemUpdate:(JCCallItem* __nonnull)item changeParam:(JCCallChangeParam * __nullable)changeParam;\n")])])]),t("h2",{attrs:{id:"拨打通话"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#拨打通话"}},[e._v("#")]),e._v(" 拨打通话")]),e._v(" "),t("p",[e._v("调用\n"),t("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/ios/Classes/JCCall.html#//api/name/call:video:extraParam:",target:"_blank",rel:"noopener noreferrer"}},[e._v("call"),t("OutboundLink")],1),e._v("\n发起语音通话，需要填写的参数有：")]),e._v(" "),t("ul",[t("li",[t("p",[t("code",[e._v("userID")]),e._v(" 填写对方的用户ID。")])]),e._v(" "),t("li",[t("p",[t("code",[e._v("video")]),e._v(" 选择是否为视频通话， true 表示拨打视频通话， false 表示拨打语音通话。")])]),e._v(" "),t("li",[t("p",[t("code",[e._v("extraParam")]),e._v(" 为自定义透传字符串， 可通过 JCCallItem 对象中的 extraParam 属性获得。")]),e._v(" "),t("p",[e._v('// 发起语音呼叫\n[call call:@"userID" video:false extraParam:@"自定义透传字符串"];')])])]),e._v(" "),t("p",[e._v("拨打通话后，主叫和被叫均会收到新增通话的回调\n"),t("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/ios/Protocols/JCCallCallback.html#//api/name/onCallItemAdd:",target:"_blank",rel:"noopener noreferrer"}},[e._v("onCallItemAdd"),t("OutboundLink")],1),e._v("\n，此时通话状态变为 JCCallStatePending 。您可以在上层实现\n"),t("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/ios/Protocols/JCCallCallback.html#//api/name/onCallItemAdd:",target:"_blank",rel:"noopener noreferrer"}},[e._v("onCallItemAdd"),t("OutboundLink")],1),e._v("\n方法并处理相关的逻辑。")]),e._v(" "),t("p",[e._v("示例代码:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("// 收到新增通话回调\n-(void)onCallItemAdd:(JCCallItem* __nonnull)item {\n    // 业务逻辑\n    if (item.direction == JCCallDirectionIn) {\n        // 如果是呼入\n        ...\n    } else {\n        // 如果是呼出\n        ...\n    }\n}\n")])])]),t("p",[e._v("Note")]),e._v(" "),t("p",[e._v("如果主叫想取消通话，可以直接转到挂断通话部分。调用挂断接口后，通话状态变为 JCCallStateCancel。")]),e._v(" "),t("h2",{attrs:{id:"应答通话"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#应答通话"}},[e._v("#")]),e._v(" 应答通话")]),e._v(" "),t("ol",[t("li",[e._v("主叫发起呼叫成功后，被叫会收到\n"),t("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/ios/Protocols/JCCallCallback.html#//api/name/onCallItemAdd:",target:"_blank",rel:"noopener noreferrer"}},[e._v("onCallItemAdd"),t("OutboundLink")],1),e._v("\n回调，此时可以通过回调中的\n"),t("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/ios/Classes/JCCallItem.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("JCCallItem"),t("OutboundLink")],1),e._v("\n对象的 video 以及 direction 属性判断是视频呼入还是语音呼入，从而做出相应的处理。")])]),e._v(" "),t("p",[e._v("示例代码:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("-(void)onCallItemAdd:(JCCallItem* __nonnull)item {\n    // 1. 如果是语音呼入且在振铃中\n    if (item && item.direction == JCCallDirectionIn && !item.video) {\n        // 2. 做出相应的处理，如在界面上显示“振铃中”\n        ...\n    }\n}\n")])])]),t("ol",{attrs:{start:"2"}},[t("li",[t("p",[e._v("调用\n"),t("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/ios/Classes/JCCall.html#//api/name/answer:video:",target:"_blank",rel:"noopener noreferrer"}},[e._v("answer"),t("OutboundLink")],1),e._v("\n接听通话，"),t("strong",[e._v("语音通话只能进行语音应答")])]),e._v(" "),t("p",[e._v("// 应答通话\n[call answer:item video:false];")])])]),e._v(" "),t("p",[e._v("通话应答后，通话状态变为 JCCallStateConnecting。")]),e._v(" "),t("p",[e._v("Note")]),e._v(" "),t("p",[e._v("如果要在此时拒绝通话，可以直接转到挂断通话部分。调用挂断接口后，通话状态变为 JCCallStateCanceled。")]),e._v(" "),t("h2",{attrs:{id:"挂断通话"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#挂断通话"}},[e._v("#")]),e._v(" 挂断通话")]),e._v(" "),t("p",[e._v("主叫或者被叫均可以挂断通话。")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("首先调用\n"),t("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/ios/Classes/JCCall.html#//api/name/getActiveCallItem",target:"_blank",rel:"noopener noreferrer"}},[e._v("getActiveCallItem"),t("OutboundLink")],1),e._v("\n获取当前活跃的通话对象；")])]),e._v(" "),t("li",[t("p",[e._v("当前活跃通话对象获取后，调用\n"),t("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/ios/Classes/JCCall.html#//api/name/term:reason:description:",target:"_blank",rel:"noopener noreferrer"}},[e._v("term"),t("OutboundLink")],1),e._v("\n挂断当前活跃通话:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('// 1. 获取当前活跃通话\nJCCallItem *item = [call getActiveCallItem];\n// 2. 挂断当前活跃通话\n[call term:item reason:JCCallReasonNone description:@"主叫挂断"];\n')])])])])]),e._v(" "),t("p",[e._v("通话挂断后，会触发 JCCallCallback 中的 onCallItemRemove（通话移除回调），通话状态变为\nJCCallStateOk。")])])}),[],!1,null,null,null);a.default=n.exports}}]);
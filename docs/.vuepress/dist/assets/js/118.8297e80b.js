(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{317:function(e,n,a){e.exports=a.p+"assets/img/multiaudioworkflow.8b56096a.png"},664:function(e,n,a){"use strict";a.r(n);var o=a(43),r=Object(o.a)({},(function(){var e=this,n=e.$createElement,o=e._self._c||n;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"实现语音互动直播"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#实现语音互动直播"}},[e._v("#")]),e._v(" 实现语音互动直播")]),e._v(" "),o("p",[e._v("本章将介绍如何实现语音互动直播，实现互动直播的 API 调用时序见下图：")]),e._v(" "),o("p",[o("img",{attrs:{src:a(317),alt:"../../../../_images/multiaudioworkflow.png"}})]),e._v(" "),o("h2",{attrs:{id:"初始化"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[e._v("#")]),e._v(" 初始化")]),e._v(" "),o("p",[e._v("调用\n"),o("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/android/com/juphoon/cloud/JCMediaDevice.html#create-com.juphoon.cloud.JCClient-com.juphoon.cloud.JCMediaDeviceCallback-",target:"_blank",rel:"noopener noreferrer"}},[e._v("JCMediaDevice.create()"),o("OutboundLink")],1),e._v("\n和\n"),o("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/android/com/juphoon/cloud/JCMediaChannel.html#create-com.juphoon.cloud.JCClient-com.juphoon.cloud.JCMediaDevice-com.juphoon.cloud.JCMediaChannelCallback-",target:"_blank",rel:"noopener noreferrer"}},[e._v("JCMediaChannel.create()"),o("OutboundLink")],1),e._v("\n以初始化实现多方通话需要的模块：:")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[e._v("// 声明对象\nJCMediaDevice mMediaDevice;\nJCMediaChannel mMediaChannel;\n\n// 初始化函数\npublic boolean initialize(Context context) {\n\n    //1. 媒体类\n    mMediaDevice = JCMediaDevice.create(mClient, new JCMediaDeviceCallback() {\n        @Override\n        public void onCameraUpdate() {\n\n        }\n        @Override\n        public void onAudioOutputTypeChange(int i) {\n\n        }\n        @Override\n        public void onRenderReceived(JCMediaDeviceVideoCanvas jcMediaDeviceVideoCanvas) {\n\n        }\n        @Override\n        public void onRenderStart(JCMediaDeviceVideoCanvas jcMediaDeviceVideoCanvas) {\n\n        }\n    });\n    // 2. 媒体通道类\n    mMediaChannel = JCMediaChannel.create(client, mediaDevice, new JCMediaChannelCallback() {\n        @Override\n        public void onMediaChannelStateChange(int i, int i1) {\n\n        }\n        @Override\n        public void onMediaChannelPropertyChange(JCMediaChannel.PropChangeParam propChangeParam) {\n\n        }\n        @Override\n        public void onJoin(boolean b, int i, String s) {\n\n        }\n        @Override\n        public void onLeave(int i, String s) {\n\n        }\n        @Override\n        public void onStop(boolean b, int i) {\n\n        }\n        @Override\n        public void onQuery(int i, boolean b, int i1, JCMediaChannelQueryInfo jcMediaChannelQueryInfo) {\n\n        }\n        @Override\n        public void onParticipantJoin(JCMediaChannelParticipant jcMediaChannelParticipant) {\n\n        }\n        @Override\n        public void onParticipantLeft(JCMediaChannelParticipant jcMediaChannelParticipant) {\n\n        }\n        @Override\n        public void onParticipantUpdate(JCMediaChannelParticipant jcMediaChannelParticipant, JCMediaChannelParticipant.ChangeParam changeParam) {\n\n        }\n        @Override\n        public void onMessageReceive(String s, String s1, String s2) {\n\n        }\n        @Override\n        public void onInviteSipUserResult(int i, boolean b, int i1) {\n\n        }\n        @Override\n        public void onParticipantVolumeChange(JCMediaChannelParticipant jcMediaChannelParticipant) {\n\n        }\n    });\n}\n")])])]),o("h2",{attrs:{id:"角色设置"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#角色设置"}},[e._v("#")]),e._v(" 角色设置")]),e._v(" "),o("p",[e._v("加入频道前要先进行角色的设置。其中角色设置包括主播和观众。 角色值可以根据\n"),o("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/android/com/juphoon/cloud/JCMediaChannel.html#CUSTOM_ROLE_0",target:"_blank",rel:"noopener noreferrer"}},[e._v("JCMediaChannel.CustomRole"),o("OutboundLink")],1),e._v("\n枚举值进行自定义，例如")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[e._v("//自定义主播角色，根据CustomState枚举值自定义角色\nint ROLE_BROASCASTER = JCMediaChannel.CUSTOM_ROLE_0;\n//自定义观众角色，根据CustomState枚举值自定义角色\nint ROLE_AUDIENCE = JCMediaChannel.CUSTOM_ROLE_1;\n")])])]),o("p",[e._v("调用\n"),o("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/android/com/juphoon/cloud/JCMediaChannel.html#setCustomRole-int-com.juphoon.cloud.JCMediaChannelParticipant-",target:"_blank",rel:"noopener noreferrer"}},[e._v("setCustomRole()"),o("OutboundLink")],1),e._v("\n设置自己的角色以进入频道。")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[e._v("// 设置角色，participant(第二个参数） 值为 null 代表设置自身的角色\nmediaChannel.setCustomRole(ROLE_BROASCASTER, null);\n")])])]),o("h2",{attrs:{id:"加入频道"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#加入频道"}},[e._v("#")]),e._v(" 加入频道")]),e._v(" "),o("ol",[o("li",[o("p",[e._v("调用\n"),o("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/android/com/juphoon/cloud/JCMediaChannel.html#enableUploadAudioStream-boolean-",target:"_blank",rel:"noopener noreferrer"}},[e._v("enableUploadAudioStream()"),o("OutboundLink")],1),e._v("\n开启音频流。")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[e._v("// 1. 开启音频流\nmMediaDeviceChannel.enableUploadAudioStream(true);\n")])])])]),e._v(" "),o("li",[o("p",[e._v("创建并加入频道，需要传入 "),o("code",[e._v("channelIdOrUri")]),e._v(" 和\n"),o("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/android/com/juphoon/cloud/JCMediaChannel.JoinParam.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("JCMediaChannel.JoinParam"),o("OutboundLink")],1),e._v("\n。")]),e._v(" "),o("blockquote",[o("ul",[o("li",[o("p",[o("code",[e._v("channelIdOrUri")]),e._v(" 表示频道 ID 或频道 Uri。")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("JCMediaChannelJoinParam")]),e._v(" 中 "),o("code",[e._v("uriMode")]),e._v(" 参数设置为 true 时表示传入频道\nUri，设置其他参数时表示传入频道 ID。传入相同的频道 ID 或相同的频道 Uri 的用户会进入同一个频道。")]),e._v(" "),o("p",[e._v('mMediaChannel.join("222", null);')])])])])]),e._v(" "),o("li",[o("p",[e._v("加入频道后收到\n"),o("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/android/com/juphoon/cloud/JCMediaChannelCallback.html#onJoin-boolean-int-java.lang.String-",target:"_blank",rel:"noopener noreferrer"}},[e._v("onJoin()"),o("OutboundLink")],1),e._v("\n回调。")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[e._v("@Override\npublic void onJoin(boolean result, @JCMediaChannel MediaChannelReason int reason, String channelId) {\n    if (result) {\n        // 加入频道成功\n    } else {\n        // 加入频道失败\n    }\n}\n")])])])])]),e._v(" "),o("h2",{attrs:{id:"离开频道"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#离开频道"}},[e._v("#")]),e._v(" 离开频道")]),e._v(" "),o("p",[e._v("调用\n"),o("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/android/com/juphoon/cloud/JCMediaChannel.html#leave--",target:"_blank",rel:"noopener noreferrer"}},[e._v("leave()"),o("OutboundLink")],1),e._v("\n方法可以离开当前频道。")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[e._v("mMediaChannel.leave();\n")])])]),o("p",[e._v("在多方视频通话中，离开频道还需要调用\n"),o("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/android/com/juphoon/cloud/JCMediaChannelParticipant.html#stopVideo--",target:"_blank",rel:"noopener noreferrer"}},[e._v("stopVideo()"),o("OutboundLink")],1),e._v("\n移除视频画面。")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[e._v("mParticipant.stopVideo();\n")])])]),o("p",[e._v("离开频道后，自身收到\n"),o("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/android/com/juphoon/cloud/JCMediaChannelCallback.html#onLeave-int-java.lang.String-",target:"_blank",rel:"noopener noreferrer"}},[e._v("onLeave()"),o("OutboundLink")],1),e._v("\n回调，其他成员同时收到\n"),o("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/android/com/juphoon/cloud/JCMediaChannelCallback.html#onParticipantLeft-com.juphoon.cloud.JCMediaChannelParticipant-",target:"_blank",rel:"noopener noreferrer"}},[e._v("onParticipantLeft()"),o("OutboundLink")],1),e._v("\n回调。")]),e._v(" "),o("h2",{attrs:{id:"解散频道"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#解散频道"}},[e._v("#")]),e._v(" 解散频道")]),e._v(" "),o("p",[e._v("如果想解散频道，可以调用下面的接口，此时所有成员都将被退出。")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[e._v("// 结束频道\nmMediaChannel.stop();\n")])])]),o("p",[e._v("在多方视频通话中，离开频道还需要调用\n"),o("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/android/com/juphoon/cloud/JCMediaChannelParticipant.html#stopVideo--",target:"_blank",rel:"noopener noreferrer"}},[e._v("stopVideo()"),o("OutboundLink")],1),e._v("\n移除视频画面。")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[e._v("mParticipant.stopVideo();\n")])])]),o("p",[e._v("解散频道后，发起结束的成员收到\n"),o("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/android/com/juphoon/cloud/JCMediaChannelCallback.html#onStop-boolean-int-",target:"_blank",rel:"noopener noreferrer"}},[e._v("onStop()"),o("OutboundLink")],1),e._v("\n回调，其他成员同时收到\n"),o("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/android/com/juphoon/cloud/JCMediaChannelCallback.html#onLeave-int-java.lang.String-",target:"_blank",rel:"noopener noreferrer"}},[e._v("onLeave()"),o("OutboundLink")],1),e._v("\n回调。 解散失败原因枚举值请参考\n"),o("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/android/com/juphoon/cloud/JCMediaChannel.html#REASON_ALREADY_JOINED",target:"_blank",rel:"noopener noreferrer"}},[e._v("MediaChannelReason"),o("OutboundLink")],1),e._v("\n。")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[e._v("@Override\npublic void onStop(boolean result, @JCMediaChannel.MediaChannelReason int reason) {\n    // 销毁视频， canvas 为 JCMediaDeviceVideoCanvas 对象实例\n    mParticipant.stopVideo();\n    canvas = null;\n}\n")])])])])}),[],!1,null,null,null);n.default=r.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{317:function(e,a,n){e.exports=n.p+"assets/img/multiaudioworkflow.8b56096a.png"},584:function(e,a,n){"use strict";n.r(a);var r=n(43),t=Object(r.a)({},(function(){var e=this,a=e.$createElement,r=e._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"实现多方通话"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#实现多方通话"}},[e._v("#")]),e._v(" 实现多方通话")]),e._v(" "),r("p",[e._v("本章将介绍如何实现多方音视频通话，多方通话的 API 调用时序见下图：")]),e._v(" "),r("p",[r("img",{attrs:{src:n(317),alt:"../../../../_images/multiaudioworkflow.png"}})]),e._v(" "),r("h2",{attrs:{id:"初始化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[e._v("#")]),e._v(" 初始化")]),e._v(" "),r("p",[e._v("调用 "),r("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/ios/Classes/JCMediaDevice.html#//api/name/create:callback:",target:"_blank",rel:"noopener noreferrer"}},[e._v("JCMediaDevice\ncreate"),r("OutboundLink")],1),e._v("\n和 "),r("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/ios/Classes/JCMediaChannel.html#//api/name/create:mediaDevice:callback:",target:"_blank",rel:"noopener noreferrer"}},[e._v("JCMediaChannel\ncreate"),r("OutboundLink")],1),e._v("\n以初始化实现多方通话需要的模块：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v("//初始化\n-(bool)initialize {\n   //1. 媒体类\n   JCMediaDevice *mediaDevice = [JCMediaDevice create:client callback:self];\n   //2. 媒体通道类\n   JCMediaChannel *mediaChannel = [JCMediaChannel create:client mediaDevice:mediaDevice callback:self];\n   return client.state == JCClientStateLogined;\n}\n")])])]),r("p",[e._v("其中：")]),e._v(" "),r("ul",[r("li",[e._v("JCMediaDevice create 方法中的 callback 为\n"),r("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/ios/Protocols/JCMediaDeviceCallback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("JCMediaDeviceCallback"),r("OutboundLink")],1),e._v("\n协议的代理对象，该协议用于将媒体设备相关的事件通知给上层。因此需要先指定 callback 的代理对象，然后在该代理对象中实现\nJCMediaDeviceCallback 的方法。")])]),e._v(" "),r("p",[e._v("JCMediaDeviceCallback 中的主要方法如下")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v("//摄像头变化\n-(void)onCameraUpdate;\n\n//音频输出变化\n-(void)onAudioOutputTypeChange:(NSString*)audioOutputType;\n\n//声音中断恢复\n-(void)onAudioInerruptAndResume:(BOOL)interrupt;\n")])])]),r("ul",[r("li",[e._v("JCMediaChannel create 方法中的 callback 为\n"),r("a",{attrs:{href:"#id7"}},[r("span",{staticClass:"problematic",attrs:{id:"id8"}},[e._v("|JCMediaChannelCallback|")])]),e._v("\n协议的代理对象，该协议用于将频道中的相关事件通知给上层。因此需要先指定 callback 的代理对象，然后在该代理对象中实现\nJCMediaChannelCallback 的方法。")])]),e._v(" "),r("p",[e._v("JCMediaChannel 中的主要方法如下")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v("//自身状态变化回调\n-(void)onMediaChannelStateChange:(JCMediaChannelState)state oldState:(JCMediaChannelState)oldState;\n\n//加入频道结果回调\n-(void)onJoin:(bool)result reason:(JCMediaChannelReason)reason channelId:(NSString*)channelId;\n\n//离开频道结果回调\n-(void)onLeave:(JCMediaChannelReason)reason channelId:(NSString*)channelId;\n\n//解散频道结果回调\n-(void)onStop:(bool)result reason:(JCMediaChannelReason)reason;\n\n//新成员加入回调\n-(void)onParticipantJoin:(JCMediaChannelParticipant*)participant;\n\n//成员离开回调\n-(void)onParticipantLeft:(JCMediaChannelParticipant*)participant;\n\n//成员更新回调\n-(void)onParticipantUpdate:(JCMediaChannelParticipant*)participant participantChangeParam:(JCMediaChannelParticipantChangeParam *)participantChangeParam;\n\n//成员声音变化\n-(void)onParticipantVolumeChange:(JCMediaChannelParticipant*)participant;\n")])])]),r("h2",{attrs:{id:"加入频道"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#加入频道"}},[e._v("#")]),e._v(" 加入频道")]),e._v(" "),r("ol",[r("li",[r("p",[e._v("调用\n"),r("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/ios/Classes/JCMediaChannel.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("JCMediaChannel"),r("OutboundLink")],1),e._v("\n中的\n"),r("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/ios/Classes/JCMediaChannel.html#//api/name/enableUploadAudioStream:",target:"_blank",rel:"noopener noreferrer"}},[e._v("enableUploadAudioStream"),r("OutboundLink")],1),e._v("\n开启音频流。返回 true 表示正常执行调用流程，false 表示调用异常。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v("// 1. 开启音频流\n[mediaDeviceChannel enableUploadAudioStream:true];\n")])])])]),e._v(" "),r("li",[r("p",[e._v("调用\n"),r("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/ios/Classes/JCMediaChannel.html#//api/name/join:joinParam:",target:"_blank",rel:"noopener noreferrer"}},[e._v("join"),r("OutboundLink")],1),e._v("\n方法创建并加入频道。您需要在该方法中传入如下参数：")])])]),e._v(" "),r("ul",[r("li",[r("p",[e._v("channelIdOrUri：频道 ID 或频道 Uri，当 param 中 uriMode 设置为 true 时表示频道\nUri，其他表示频道 ID。频道 ID 或 Uri 相同的用户会进入同一个频道。")])]),e._v(" "),r("li",[r("p",[e._v("joinParam：加入参数，没有则填 nil。 详见\n"),r("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/ios/Classes/JCMediaChannelJoinParam.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("JCMediaChannelJoinParam"),r("OutboundLink")],1),e._v("\n对象。")]),e._v(" "),r("p",[e._v('// 加入频道\n[mediaChannel join:@"222" joinParam:nil];')])])]),e._v(" "),r("ol",{attrs:{start:"3"}},[r("li",[r("p",[e._v("加入频道后收到\n"),r("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/ios/Protocols/JCMediaChannelCallback.html#//api/name/onJoin:reason:channelId:",target:"_blank",rel:"noopener noreferrer"}},[e._v("onJoin"),r("OutboundLink")],1),e._v("\n回调。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v("// 加入频道结果回调\n-(void)onJoin:(bool)result reason:(JCMediaChannelReason)reason channelId:(NSString*)channelId\n{\n    if (result) {\n      // 加入成功\n    } else {\n      // 加入失败\n    }\n}\n")])])])])]),e._v(" "),r("h2",{attrs:{id:"离开频道"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#离开频道"}},[e._v("#")]),e._v(" 离开频道")]),e._v(" "),r("p",[e._v("调用\n"),r("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/ios/Classes/JCMediaChannel.html#//api/name/leave",target:"_blank",rel:"noopener noreferrer"}},[e._v("leave"),r("OutboundLink")],1),e._v("\n方法离开当前频道。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v("[mediaChannel leave];\n")])])]),r("p",[e._v("离开频道后，自身收到\n"),r("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/ios/Protocols/JCMediaChannelCallback.html#//api/name/onLeave:channelId:",target:"_blank",rel:"noopener noreferrer"}},[e._v("onLeave"),r("OutboundLink")],1),e._v("\n回调，其他成员同时收到\n"),r("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/ios/Protocols/JCMediaChannelCallback.html#//api/name/onParticipantLeft:",target:"_blank",rel:"noopener noreferrer"}},[e._v("onParticipantLeft"),r("OutboundLink")],1),e._v("\n回调。")]),e._v(" "),r("h2",{attrs:{id:"解散频道"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#解散频道"}},[e._v("#")]),e._v(" 解散频道")]),e._v(" "),r("p",[e._v("如果想解散频道，可以调用下面的接口，此时所有成员都将被退出。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v("// 结束频道\n[mediaChannel stop];\n")])])]),r("p",[e._v("解散频道后，发起结束的成员收到\n"),r("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/ios/Protocols/JCMediaChannelCallback.html#//api/name/onStop:reason:",target:"_blank",rel:"noopener noreferrer"}},[e._v("onStop"),r("OutboundLink")],1),e._v("\n回调，其他成员同时收到\n"),r("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/ios/Protocols/JCMediaChannelCallback.html#//api/name/onLeave:channelId:",target:"_blank",rel:"noopener noreferrer"}},[e._v("onLeave"),r("OutboundLink")],1),e._v("\n回调。 解散失败原因枚举值请参考\n"),r("a",{attrs:{href:"https://developer.juphoon.com/portal/reference/V2.1/ios/Constants/JCMediaChannelReason.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("JCMediaChannelReason"),r("OutboundLink")],1),e._v("\n。")])])}),[],!1,null,null,null);a.default=t.exports}}]);